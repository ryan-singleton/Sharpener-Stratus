@page "/parts"
@using Sharpener.Extensions
@using Sharpener.Stratus.Api.Clients
@using Sharpener.Stratus.Blazor.Models
@using Sharpener.Stratus.Blazor.Services
@rendermode InteractiveServer
@inject StratusSettings Settings
@inject PartClient PartClient
@inject ConsoleService Console

<PageTitle>Stratus NuGet Parts</PageTitle>

<h1>Stratus Parts</h1>

<div class="content">
    <button @onclick="GetParts">Get Parts</button>
    <div class="d-flex mt-3">
        <span class="ms-2 align-self-center"> Where </span>
        <input class="flex-shrink-1 align-middle ms-2 flex-grow-1" aria-label="Filter" @bind="_where"
               @bind:event="oninput"/>
    </div>
    <div class="d-flex mt-3">
        <span class="ms-2 align-self-center"> Include </span>
        <input class="flex-shrink-1 align-middle ms-2 flex-grow-1" aria-label="Properties" @bind="_include"
               @bind:event="oninput"/>
    </div>
</div>

@code {
    private const string WhereTooltip = "Filter on JSON property values. Example: To filter on two JSON properties: length eq '10' AND description == \"truck\". To get the last 30 days of data, use: createdDT ge DateTime.Now.AddDays(-30)";
    private string? _where;
    private string? _include;

    private async Task GetParts()
    {
        var appKey = Settings.AppKey;
        var includes = _include?.Split(",").Select(x => x.Trim()) ?? [];
        var outcome = await PartClient.GetParts(appKey, options =>
        {
            options.Where = _where;
            options.SetIncludes(includes.AsArray());
        });
        if (outcome.IsError) return;

        Console.WriteToConsole("Get Parts success", outcome.Value
            .Select(x => x.Stratify())
        );
    }

}
